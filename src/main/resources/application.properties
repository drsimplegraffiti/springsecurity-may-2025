spring.application.name=jwt-security

# PostgreSQL configurations
#REPLACE THIS WITH YOUR DATABASE CREDENTIALS
spring.datasource.url=jdbc:postgresql://localhost:5432/dudu
spring.datasource.username=postgres
spring.datasource.password=Bassguitar1
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA/Hibernate properties
spring.jpa.database=postgresql
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.format_sql=create

# JWT Configuration
app.jwt.secret=856B4FEB2CF84D145A231D7A28B41856B4FEB2CF84D145A231D7A28B41856B4FEB2CF84D145A231D7A28B41
app.jwt.expiration=3600000
app.jwt.refresh-expiration=86400000

# ===================
# Mail configuration
# ===================
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${SUPPORT_EMAIL:lundelunde94@gmail.com}
spring.mail.password=${APP_PASSWORD:hzmy whpd ayox ctop}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


# Redis configuration
# Redis configuration
#spring.data.redis.host=localhost
#spring.data.redis.port=6379

spring.data.redis.host=redis-17993.c256.us-east-1-2.ec2.redns.redis-cloud.com
spring.data.redis.port=17993
spring.data.redis.username=default
spring.data.redis.password=CQziJxNp6wcnjiRK59ZllFLwvX9wNXLz


cloudinary.cloud-name=drsimple
cloudinary.api-key=934959128785944
cloudinary.api-secret=sCnORU-HS1oDaFMuG8EPIvUpKkI

spring.main.allow-bean-definition-overriding=true

# ========================
# this is to disable the security auto configuration
spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration


server.compression.enabled=true
server.compression.mime-types=application/json,application/xml,text/html,text/xml,text/plain
server.compression.min-response-size=1024


spring.security.oauth2.client.registration.google.client-id=203386475544-334vvfbcf7faq2o9ul3q2go5vcc6adt8.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
google.redirect-uri=http://localhost:8080/login/oauth2/code/google

spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:8080/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-name=Google

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE


#actuator instead of * you can also use specific endpoints
management.endpoints.web.exposure.include=health,info,metrics,prometheus,logfile,threaddump
management.endpoints.health.show-details=always

## resilience4j
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.sliding-window-size=10
resilience4j.circuitbreaker.configs.default.minimum-number-of-calls=5
resilience4j.circuitbreaker.configs.default.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.configs.default.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.configs.default.wait-duration-in-open-state=10000
resilience4j.circuitbreaker.configs.default.failure-rate-threshold=50
resilience4j.circuitbreaker.configs.default.event-consumer-buffer-size=10


# ========================
# Import .env if available
# ========================
spring.config.import=optional:file:.env[.properties]

spring.batch.initialize-schema=always



